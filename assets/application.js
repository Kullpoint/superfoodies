/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/scripts/application.js":
/*!************************************!*\
  !*** ./src/scripts/application.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _components_loginModal__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/loginModal */ \"./src/scripts/components/loginModal.js\");\n/* harmony import */ var _modules_showHidePassword__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/showHidePassword */ \"./src/scripts/modules/showHidePassword.js\");\n\r\n\r\n\r\nconst removePreloader = () => {\r\n    const preloader = document.getElementById('preloader');\r\n\r\n    setTimeout(() => {\r\n        document.body.style.overflow = '';\r\n        preloader.classList.add('hidden');\r\n        setTimeout(() => {\r\n            preloader.classList.add('dn');\r\n        }, 500);\r\n    }, 300);\r\n}\r\n\r\nconst megaMenuLogic = () => {\r\n    const links = document.querySelectorAll('[data-mega-menu-link]');\r\n    const menus = document.querySelectorAll('[data-mega-menu]');\r\n\r\n    for (const link of links) {\r\n        for (const menu of menus) {\r\n            if (link.getAttribute('data-mega-menu-link') == menu.getAttribute('data-mega-menu')) {\r\n                const openMenu = () => {\r\n                    menu.classList.remove('dn');\r\n                    setTimeout(() => {\r\n                        menu.classList.add('active');\r\n                    }, 1);\r\n                }\r\n\r\n                const closeMenu = () => {\r\n                    menu.classList.remove('active');\r\n                    setTimeout(() => {\r\n                        menu.classList.add('dn');\r\n                    }, 300);\r\n                }\r\n\r\n                link.addEventListener('mouseover', () => {\r\n                    openMenu();\r\n                });\r\n\r\n                link.addEventListener('mouseleave', (e) => {\r\n                    if (e.toElement == menu) {\r\n                        return;\r\n                    }\r\n\r\n                    closeMenu();\r\n                });\r\n\r\n                menu.addEventListener('mouseleave', (e) => {\r\n                    if (e.toElement == link) {\r\n                        return;\r\n                    }\r\n\r\n                    closeMenu();\r\n                });\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mobileMenuLogic = () => {\r\n    const mobileMenu = document.getElementById('mobile-menu');\r\n    const openBtns = document.querySelectorAll('[data-mobile-menu-open-btn]');\r\n    const closeBtns = document.querySelectorAll(['[data-mobile-menu-close-btn]']);\r\n    const links = document.querySelectorAll('[data-mobile-megamenu-link]');\r\n    const menus = document.querySelectorAll('[data-mobile-megamenu]');\r\n\r\n    //open/close mobile menu logic\r\n    const openMobileMenu = () => {\r\n        mobileMenu.classList.remove('dn');\r\n        setTimeout(() => {\r\n            mobileMenu.classList.add('active');\r\n        }, 1);\r\n    }\r\n\r\n    const closeMobileMenu = () => {\r\n        mobileMenu.classList.remove('active');\r\n        setTimeout(() => {\r\n            mobileMenu.classList.add('dn');\r\n        }, 300);\r\n\r\n        //close all megamenus\r\n        for (const menu of menus) {\r\n            const closeMenu = () => {\r\n                menu.classList.remove('active');\r\n                setTimeout(() => {\r\n                    menu.classList.add('dn');\r\n                }, 300);\r\n            }\r\n\r\n            closeMenu();\r\n        }\r\n    }\r\n\r\n    for (const openBtn of openBtns) {\r\n        openBtn.addEventListener('click', () => {\r\n            if (mobileMenu.classList.contains('active')) {\r\n                closeMobileMenu();\r\n            }\r\n            else {\r\n                openMobileMenu();\r\n            }\r\n        });\r\n    }\r\n\r\n    for (const closeBtn of closeBtns) {\r\n        closeBtn.addEventListener('click', () => {\r\n            closeMobileMenu();\r\n        });\r\n    }\r\n\r\n    //megamenus logic\r\n    for (const link of links) {\r\n        for (const menu of menus) {\r\n            if (link.getAttribute('data-mobile-megamenu-link') == menu.getAttribute('data-mobile-megamenu')) {\r\n                const backBtn = menu.querySelector('[data-mobile-megamenu-back-btn]');\r\n\r\n                const openMenu = () => {\r\n                    menu.classList.remove('dn');\r\n                    setTimeout(() => {\r\n                        menu.classList.add('active');\r\n                    }, 1);\r\n                }\r\n\r\n                const closeMenu = () => {\r\n                    menu.classList.remove('active');\r\n                    setTimeout(() => {\r\n                        menu.classList.add('dn');\r\n                    }, 300);\r\n                }\r\n\r\n                link.addEventListener('click', () => {\r\n                    openMenu();\r\n                });\r\n\r\n                backBtn.addEventListener('click', () => {\r\n                    closeMenu();\r\n                });\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mobileSearchLogic = () => {\r\n    const search = document.querySelector('[data-header-search]');\r\n    const openBtns = document.querySelectorAll('[data-mobile-search-open-btn]');\r\n    const closeBtns = document.querySelectorAll('[data-mobile-search-close-btn]');\r\n\r\n    const searchOpen = () => {\r\n        search.classList.remove('dn');\r\n        setTimeout(() => {\r\n            search.classList.add('active');\r\n        }, 1);\r\n    }\r\n\r\n    const searchClose = () => {\r\n        search.classList.remove('active');\r\n        setTimeout(() => {\r\n            search.classList.add('dn');\r\n        }, 300);\r\n    }\r\n\r\n    for (const openBtn of openBtns) {\r\n        openBtn.addEventListener('click', () => {\r\n            if (search.classList.contains('active')) {\r\n                searchClose();\r\n            }\r\n            else {\r\n                searchOpen();\r\n            }\r\n        });\r\n    }\r\n\r\n    for (const closeBtn of closeBtns) {\r\n        closeBtn.addEventListener('click', () => {\r\n            searchClose();\r\n        });\r\n    }\r\n}\r\n\r\nconst cartModalLogic = () => {\r\n    const headerCart = document.querySelector('[data-header-cart]');\r\n    const cartModal = document.querySelector('[data-cart-modal]');\r\n\r\n    headerCart.addEventListener('click', () => {\r\n        if (!cartModal.classList.contains('dn')) {\r\n            cartModal.classList.add('dn');\r\n        }\r\n        else {\r\n            cartModal.classList.remove('dn');\r\n        }\r\n    });\r\n\r\n    // window.addEventListener('click', (e) => {\r\n    //     if (!e.target.closest('.header__cart')) {\r\n    //         cartModal.classList.add('dn');\r\n    //     }\r\n    // });\r\n}\r\n\r\nconst addToCartLogic = () => {\r\n    const cartCounter = document.querySelector('[data-cart-count]');\r\n    const cartModalTotalPrice = document.querySelector('[data-cart-modal-total-price]');\r\n    const freeShipping = document.querySelector('[data-free-shipping]');\r\n    const freeShippingPrice = freeShipping.querySelector('[data-free-shipping-price]');\r\n\r\n    const freeShippingLogic = () => {\r\n        if (cartModalTotalPrice.innerHTML.replace(/^\\D+/g, '') > 59) {\r\n            freeShipping.innerHTML = 'U komt in aanmerking voor gratis verzending!';\r\n        }\r\n        else {\r\n            freeShippingPrice.innerHTML = (59 - cartModalTotalPrice.innerHTML.replace(/^\\D+/g, '')).toFixed(2);\r\n        }\r\n    }\r\n\r\n    freeShippingLogic();\r\n\r\n    setInterval(() => {\r\n        if (window.allPageProducts) {\r\n            const products = document.querySelectorAll('[product-selector]');\r\n    \r\n            if (products.length > 0) {\r\n                for (const product of products) {\r\n                    const productID = product.getAttribute('product-selector');\r\n        \r\n                    for (const allPageProduct of window.allPageProducts) {\r\n                        if (allPageProduct.id == productID) {\r\n                            if (!product.classList.contains('logic')) {\r\n                                product.classList.add('logic');\r\n                                const productSubmit = product.querySelector('[data-procut-cart-buybtn]');\r\n                                const varantId = allPageProduct.variants[0].id;\r\n                                \r\n                                if (productSubmit) {\r\n                                    productSubmit.addEventListener('click', () => {\r\n                                        const productQuantity = product.querySelector('[data-product-quantity]');\r\n                                        const updateObj = {};\r\n                    \r\n                                        if (productQuantity) {\r\n                                            updateObj[varantId] = productQuantity.value;\r\n                                        }\r\n                                        else {\r\n                                            updateObj[varantId] = 1;\r\n                                        }\r\n                    \r\n                                        fetch(window.Shopify.routes.root + 'cart/update.js', {\r\n                                            method: 'POST',\r\n                                            headers: {\r\n                                                'Content-Type': 'application/json'\r\n                                            },\r\n                                            body: JSON.stringify(\r\n                                                {\r\n                                                    updates: updateObj\r\n                                                }\r\n                                            )\r\n                                        })\r\n                                        .then((response) => response.json())\r\n                                        .then((data) => {\r\n                                            console.log(data);\r\n                                            \r\n                                            cartModalTotalPrice.innerHTML = (\"€\" + (data.total_price / 100));\r\n                                            cartCounter.innerHTML = data.item_count;\r\n                                            freeShippingLogic();\r\n                                        })\r\n                                        .catch((error) => {\r\n                                            console.error('Error:', error);\r\n                                        });\r\n                                    });\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        const clerkProducts = document.querySelectorAll('.clerk-design-product');\r\n\r\n        if (clerkProducts.length > 0) {\r\n            for (const product of clerkProducts) {\r\n                const variantID = product.querySelector('[name=\"id\"]').value;\r\n    \r\n                if (!product.classList.contains('logic')) {\r\n                    product.classList.add('logic');\r\n                    const productSubmit = product.querySelector('[data-procut-cart-buybtn]');\r\n                    \r\n                    if (productSubmit) {\r\n                        productSubmit.addEventListener('click', (e) => {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            const productQuantity = product.querySelector('[name=\"quantity\"]');\r\n                            const updateObj = {};\r\n        \r\n                            if (productQuantity) {\r\n                                updateObj[variantID] = productQuantity.value;\r\n                            }\r\n                            else {\r\n                                updateObj[variantID] = 1;\r\n                            }\r\n        \r\n                            fetch(window.Shopify.routes.root + 'cart/update.js', {\r\n                                method: 'POST',\r\n                                headers: {\r\n                                    'Content-Type': 'application/json'\r\n                                },\r\n                                body: JSON.stringify(\r\n                                    {\r\n                                        updates: updateObj\r\n                                    }\r\n                                )\r\n                            })\r\n                            .then((response) => response.json())\r\n                            .then((data) => {\r\n                                console.log(data);\r\n                                \r\n                                cartModalTotalPrice.innerHTML = (\"€\" + (data.total_price / 100));\r\n                                cartCounter.innerHTML = data.item_count;\r\n                                freeShippingLogic();\r\n                            })\r\n                            .catch((error) => {\r\n                                console.error('Error:', error);\r\n                            });\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, 100);\r\n}\r\n\r\nconst videoLogic = () => {\r\n    const videoContainers = document.querySelectorAll('[data-video-container]');\r\n\r\n    if (videoContainers.length) {\r\n        for (const videoContainer of videoContainers) {\r\n            const video = videoContainer.querySelector('[data-video]');\r\n            const videoPlayZone = videoContainer.querySelector('[data-video-playzone]');\r\n            const videoPlayButton = videoContainer.querySelector('[data-video-btn=\"play\"]');\r\n            const videoPauseButton = videoContainer.querySelector('[data-video-btn=\"pause\"]');\r\n\r\n            const playVideo = () => {\r\n                videoPlayButton.classList.add('dn');\r\n                videoPlayZone.classList.add('dn');\r\n                videoPauseButton.classList.remove('dn');\r\n                video.play();\r\n            }\r\n\r\n            const pauseVideo = () => {\r\n                videoPauseButton.classList.add('dn');\r\n                videoPlayButton.classList.remove('dn');\r\n                videoPlayZone.classList.remove('dn');\r\n                video.pause();\r\n            }\r\n\r\n            video.addEventListener('click', () => {\r\n                pauseVideo();\r\n            });\r\n\r\n            videoPlayZone.addEventListener('click', () => {\r\n                playVideo();\r\n            });\r\n\r\n            videoPlayButton.addEventListener('click', () => {\r\n                playVideo();\r\n            });\r\n\r\n            videoPauseButton.addEventListener('click', () => {\r\n                pauseVideo();\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nconst yearChanger = () => {\r\n    const yearBlock = document.getElementById('current-year');\r\n    const currentYear = new Date().getFullYear();\r\n\r\n    yearBlock.innerHTML = currentYear;\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    removePreloader();\r\n    megaMenuLogic();\r\n    mobileMenuLogic();\r\n    mobileSearchLogic();\r\n    cartModalLogic();\r\n    addToCartLogic();\r\n    videoLogic();\r\n    yearChanger();\r\n    (0,_components_loginModal__WEBPACK_IMPORTED_MODULE_0__.loginModal)();\r\n    (0,_modules_showHidePassword__WEBPACK_IMPORTED_MODULE_1__.showHidePassword)();\r\n});\r\n\n\n//# sourceURL=webpack://superfoodies/./src/scripts/application.js?");

/***/ }),

/***/ "./src/scripts/components/loginModal.js":
/*!**********************************************!*\
  !*** ./src/scripts/components/loginModal.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"loginModal\": () => (/* binding */ loginModal)\n/* harmony export */ });\nconst loginModal = () => {\r\n    const form = document.getElementById('customer_login');\r\n    const submitBtn = document.getElementById('login_submit_btn');\r\n\r\n    submitBtn.addEventListener('click', (e) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n\r\n        fetch('/account/login', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: form\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            console.log(data);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n        });\r\n    });\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://superfoodies/./src/scripts/components/loginModal.js?");

/***/ }),

/***/ "./src/scripts/modules/showHidePassword.js":
/*!*************************************************!*\
  !*** ./src/scripts/modules/showHidePassword.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"showHidePassword\": () => (/* binding */ showHidePassword)\n/* harmony export */ });\nconst showHidePassword = () => {\r\n    const containers = document.querySelectorAll('[data-show-hide-password-container]');\r\n\r\n    if (containers.length > 0) {\r\n        for (const container of containers) {\r\n            const passwordInput = container.querySelector('[data-show-hide-password-input=\"password\"]');\r\n            const showPasswordBtn = container.querySelector('[data-show-hide-password-button=\"show_password\"]');\r\n            const hidePasswordBtn = container.querySelector('[data-show-hide-password-button=\"hide_password\"]');\r\n\r\n            showPasswordBtn.addEventListener('click', () => {\r\n                passwordInput.setAttribute('type', 'password');\r\n                showPasswordBtn.classList.add('dn');\r\n                hidePasswordBtn.classList.remove('dn');\r\n            });\r\n        \r\n            hidePasswordBtn.addEventListener('click', () => {\r\n                passwordInput.setAttribute('type', 'text');\r\n                showPasswordBtn.classList.remove('dn');\r\n                hidePasswordBtn.classList.add('dn');\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\n\n//# sourceURL=webpack://superfoodies/./src/scripts/modules/showHidePassword.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/scripts/application.js");
/******/ 	
/******/ })()
;